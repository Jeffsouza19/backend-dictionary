## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Auth Routes'
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: auth/signin
    metadata:
      groupName: 'Auth Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'SignIn Route'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: paul.larkin@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: paul.larkin@example.net
      password: et
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "id": 2, "name": "Jeferson", "token": "Bearer *token*" }'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{ "errors": { "message": { "email": [ "The email has already been taken." ] } } }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: auth/signup
    metadata:
      groupName: 'Auth Routes'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'SignUp Route'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: ''
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: warren86@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: a
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      name: totam
      email: warren86@example.net
      password: a
    fileParameters: []
    responses:
      -
        status: 200
        content: '{ "id": 2, "name": "Jeferson", "token": "Bearer *token*" }'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{ "errors": { "message": "Não Foi possível realizar o Login, favor verificar se o email e/ou senha estão corretos" } }'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
